name: Deploy
 
on:
  push:
    branches:    
    - main 

  workflow_dispatch:

env:
  S3_BUCKET_NAME: next-trpc-deno-example
  API_ENDPOINT_URL_PARAM: /next-trpc-deno-example/endpoint

permissions:
  id-token: write
  contents: read

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - uses: pnpm/action-setup@v2
      name: Install pnpm
      id: pnpm-install
      with:
        version: latest
        run_install: |
          - recursive: true
            args: [--no-frozen-lockfile]
          - args: [--global, aws-cdk]

    - name: Use Node.js 20.x
      uses: actions/setup-node@v3.8.1
      with:
        node-version: 20.x
        check-latest: true

    - name: configure aws credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        role-to-assume: ${{ secrets.OIDC_IAM_ROLE }}
        role-session-name: GitHubActions
        aws-region: us-west-2

    - name: Deploy infra
      working-directory: cdk
      run: cdk deploy -c s3bucketName=${{ env.S3_BUCKET_NAME }} -c apiEndpointUrlParamName=${{ env.API_ENDPOINT_URL_PARAM }}

    - name: Get Parameters
      uses: poad/get-aws-ssm-parameter@v2.0.1
      id: get-param
      with:
        parameter-name: ${{ env.API_ENDPOINT_URL_PARAM }}
        aws-region: us-west-2

    - name: Install (lambda)
      working-directory: lambda
      run: pnpm install

    - name: Build
      working-directory: front
      env:
        NEXT_PUBLIC_API_URL: ${{ steps.get-param.outputs.value }}
      run: pnpm build
  
    - name: Upload to s3
      working-directory: front/out
      run: |
        aws s3 sync . s3://${{ env.S3_BUCKET_NAME }} --delete

